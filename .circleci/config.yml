version: 2.1
orbs:
  python: circleci/python@1.4.0
  ot: ottertune/ot-cci-orb@0.12.0

jobs:
  build_lint_and_test:
    docker:
      - image: cimg/python:3.8.8
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements-dev.txt
          pkg-manager: pip
      - run:
          name: Lint
          command: pylint driver/ tests/
      - run:
          name: typecheck-ci
          # There may be a better way to specify the search path
          command: |
            pyre --noninteractive --search-path /home/circleci/.pyenv/versions/3.8.8/lib/python3.8/site-packages
      - run:
          name: Test
          command: pytest
  
  mysql_test:
    docker:
      - image: circleci/python:3.8.5  # primary container for the build job
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_TCP_PORT: 3306
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_TCP_PORT: 3307
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements-dev.txt
          pkg-manager: pip
      - run:
          name: Waiting for MySQL 8 to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL 8 && exit 1
      - run:
          name: Test database collector/agent for MySQL 8
          command: |
            pytest tests/db_test_mysql.py --db_type=mysql --mysql_host=127.0.0.1 --mysql_port=3306 --mysql_user=root --mysql_password=test_password
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL 5.7 to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3307 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL 5.7 && exit 1
      - run:
          name: Test database collector/agent for MySQL 5.7
          command: |
            pytest tests/db_test_mysql.py --db_type=mysql --mysql_host=127.0.0.1 --mysql_port=3307 --mysql_user=root --mysql_password=test_password
      - run:
          name: Test database collector/agent for Aurora MySQL 5.7
          command: |
            pytest tests/db_test_mysql.py --db_type=aurora_mysql --mysql_host=127.0.0.1 --mysql_port=3307 --mysql_user=root --mysql_password=test_password

  postgres_test:
    docker:
      - image: circleci/python:3.8.5  # primary container for the build job
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_PASSWORD: test_password
          PGPORT: 5433
      - image: circleci/postgres:12
        environment:
          POSTGRES_PASSWORD: test_password
          PGPORT: 5434
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements-dev.txt
          pkg-manager: pip
      - run:
      # Our primary container isn't Postgres so run a sleep command until it's ready.
          name: Waiting for Postgres 9.6 to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 5433 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres 9.6 && exit 1
      - run:
          name: Test database collector/agent for Postgres 9.6
          command: |
            pytest tests/db_test_postgres.py --db_type=postgres --pg_host=127.0.0.1 --pg_port=5433 --pg_user=postgres --pg_password=test_password
      - run:
          name: Test database collector/agent for Aurora Postgres 9.6
          command: |
            pytest tests/db_test_postgres.py --db_type=aurora_postgresql --pg_host=127.0.0.1 --pg_port=5433 --pg_user=postgres --pg_password=test_password
      - run:
      # Our primary container isn't Postgres so run a sleep command until it's ready.
          name: Waiting for Postgres 12 to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 5434 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres 12 && exit 1
      - run:
          name: Test database collector/agent for Postgres 12
          command: |
            pytest tests/db_test_postgres.py --db_type=postgres --pg_host=127.0.0.1 --pg_port=5434 --pg_user=postgres --pg_password=test_password
  
workflows:
  main:
    jobs:
      - build_lint_and_test:
          name: "Build, Lint, and Test"
          context: "AWS CLI"
      - mysql_test:
          name: "Test MySQL"
          context: "AWS CLI"
      - postgres_test:
          name: "Test Postgres"
          context: "AWS CLI"

      - ot/docker-push:
          name: "Build Release Image Dockerhub"
          container-destination: "dockerhub"
          registry-url-env-name: DOCKERHUB_REGISTRY
          repo-name: "ottertune/agent"
          context: 
            - "AWS CLI"
            - "Ottertune Dockerhub"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)/
      - ot/docker-push:
          name: "Build Release Image ECR"
          container-destination: "public-ecr"
          registry-url-env-name: AWS_PUBLIC_ECR_URL
          repo-name: "agent"
          context: 
            - "AWS CLI"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)/
